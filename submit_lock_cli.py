#!/usr/bin/env python3

import sys
import click
import check_submit_lock
import delete_old_entries

import logging

LOGGER = logging.getLogger()
LOGGER.setLevel(logging.DEBUG)

handler = logging.StreamHandler(sys.stdout)
handler.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
LOGGER.addHandler(handler)


@click.group()
def cli():
    """CLI for submit lock accounts """
    pass


@cli.command()
@click.argument('input_file')
def check_submit_locks(input_file):
    """check submit locks in the dumb file
        :param input_file: Ldap dumb file to parse
    """
    check_submit_lock.check_submit_locks(input_file, logger=LOGGER)


@cli.command()
@click.argument('input_file')
@click.option('--limit_days_ago', default=None)
@click.option('--limit_number_of_accounts', default=10)
def delete_submit_locks(input_file, limit_days_ago, limit_number_of_accounts):
    """Delete entries in ldap older than limit_days_ago before today
        :param input_file: File generated by check_submit_locks
        :param limit_days_ago: Date limit in days before current date to delete lock = submit
        :param limit_number_of_accounts: Number of accounts to delete lock = submit
    """
    if limit_number_of_accounts > 1000:
        LOGGER.error("Limit number of accounts is: {} (greater than 1000). "
                     "Not allowed!".format(limit_number_of_accounts))
        sys.exit(1)
    delete_old_entries.delete_old_entries(input_file, logger=LOGGER,
                                          limit_number_of_accounts=limit_number_of_accounts,
                                          limit_days_ago=limit_days_ago)


if __name__ == '__main__':
    cli()
