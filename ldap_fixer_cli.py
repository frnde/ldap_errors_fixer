#!/usr/bin/env python3

import sys
import click


import check_entry_mariadb
import delete_old_entries
import detect_ldap_problems
import fix_wrong_format
from config_loader import load_config
from common import LOGGER


@click.group()
def cli():
    """CLI for submit lock accounts """
    pass


@cli.command()
@click.argument('input_file')
@click.option('--limit_days_ago', default=None)
@click.option('--number_of_accounts', default=10)
def delete_submit_locks(input_file, limit_days_ago, number_of_accounts):
    """Delete entries in ldap older than limit_days_ago before today
        :param input_file: File generated by check_submit_locks
        :param limit_days_ago: Date limit in days before current date to delete lock = submit
        :param number_of_accounts: Number of accounts to delete lock = submit
    """
    if number_of_accounts > 1000:
        LOGGER.error("Limit number of accounts is: {} (greater than 1000). "
                     "Not allowed!".format(number_of_accounts))
        sys.exit(1)
    delete_old_entries.delete_old_entries(input_file, number_of_accounts=number_of_accounts,
                                          limit_days_ago=limit_days_ago)


@cli.command()
@click.argument('input_file')
@click.argument('pattern')
def detect_wrong_format(input_file, pattern):
    """Delete entries in ldap older than limit_days_ago before today
        :param input_file: Ldap dumb file to parse
        :param pattern: Pattern to be detected, it must be defined in config.yml!
    """
    cfg = load_config()
    try:
        cfg[pattern]
    except KeyError:
        LOGGER.error("Pattern not found in the config.yml file!")
        sys.exit(1)
    else:
        detect_ldap_problems.detect_wrong_format(cfg[pattern], input_file)


@cli.command()
@click.argument('input_file')
@click.option('--number_of_accounts', default=10)
def fix_wrong_format(input_file, number_of_accounts):
    """Delete entries in ldap older than limit_days_ago before today
        :param input_file: Ldap dumb file to parse
        :param number_of_accounts: Number of accounts to fix
    """
    fix_wrong_format.fix_wrong_format(input_file, number_of_accounts=number_of_accounts)


if __name__ == '__main__':
    cli()
